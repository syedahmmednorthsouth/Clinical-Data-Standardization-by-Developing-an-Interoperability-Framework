<project name="Usagi" default="dist" basedir=".">
    <description>
        simple example build file
    </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="lib" location="lib"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>
  
  <property name="JDK_VERSION" value="1.8"/>
  
  <path id="classpath">
    <fileset dir="${lib}" includes="**/*.jar"/>
  </path>  

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac 
      source="${JDK_VERSION}" 
      target="${JDK_VERSION}" 
      srcdir="${src}" 
      classpathref="classpath"
      destdir="${build}"
      includeantruntime="false"
    />
  </target>

  <target name="dist" depends="compile"
        description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}/lib"/>
    
    <!-- Put all dependency jars in a temp file -->
    <jar jarfile="${dist}/lib/deps.jar">
    	<zipgroupfileset dir="${lib}">
    		<include name="**/*.jar"/>
    	</zipgroupfileset>
    </jar>
    
    <sleep seconds="1"/>
    
    <!-- Put everything in ${build} into the Usagi-${DSTAMP}.jar file -->
    <jar jarfile="${dist}/Usagi.jar" basedir="${build}">
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Main-Class" value="org.ohdsi.usagi.Launcher"/>
      </manifest>
      <fileset dir="${src}">
      	<include name="org/ohdsi/usagi/**/*.png"/>
      </fileset>      
      <zipfileset src="${dist}/lib/deps.jar" excludes="META-INF/*.SF"/>
    </jar>                                                                                                                                                       
  </target>

  <target name="clean"
        description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
</project>